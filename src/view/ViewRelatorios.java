/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

/**
 *
 * @author Eliezer
 */

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.GregorianCalendar;
import javax.swing.DefaultComboBoxModel;
import model.APISistemaDesktop;
import model.Calendario;
import model.CategoriaDespesa;
import model.CategoriaReceita;
import model.DadosMes;
import model.Despesa;
import model.Movimentacao;
import model.Receita;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;
import org.jfree.util.Rotation;


public class ViewRelatorios extends javax.swing.JFrame {

    /**
     * Creates new form ViewRelatorios
     */
    
    private DefaultCategoryDataset dadosGraficoBarras;
    private DefaultPieDataset dadosGraficoTorta;
    private GregorianCalendar iniciogc;
    private GregorianCalendar fimgc;
    private boolean isSelectedReceita;
    private boolean isSelectedDespesa;
    
    public ViewRelatorios() {
        initComponents();
        dadosGraficoBarras = new DefaultCategoryDataset();
        geraPieChart(7);
        geraBarChart();
    }
    
    public void addController(ActionListener c) {
        relatorioVoltar.addActionListener(c);
        relatorioVoltar2.addActionListener(c);
        relatorioAplicarFiltro.addActionListener(c);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewRelatorio_Pie = new javax.swing.JPanel();
        relatorioMesTab = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        relatorioVoltar = new javax.swing.JButton();
        viewRelatorio_Bar = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        viewRelatorio_BarChart = new javax.swing.JLayeredPane();
        jPanel3 = new javax.swing.JPanel();
        relatorioMesInicialCb = new javax.swing.JComboBox<String>();
        relatorioCategoriaCb = new javax.swing.JComboBox<String>();
        relatorioAnoInicialCb = new javax.swing.JComboBox<String>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        relatorioMesFinalCb = new javax.swing.JComboBox<String>();
        relatorioAnoFinalCb = new javax.swing.JComboBox<String>();
        relatorioAplicarFiltro = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        relatorioMesCb = new javax.swing.JComboBox<String>();
        relatorioVoltar2 = new javax.swing.JButton();
        viewRelatorio_PieChart = new javax.swing.JLayeredPane();
        jLabel5 = new javax.swing.JLabel();
        relatorioSelecionarMes = new javax.swing.JButton();
        relatorioAnoCb = new javax.swing.JComboBox<String>();
        jLabel6 = new javax.swing.JLabel();
        relatorioDespesasChb = new javax.swing.JCheckBox();
        relatorioReceitasChb = new javax.swing.JCheckBox();

        viewRelatorio_Pie.setLayout(new java.awt.BorderLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        relatorioVoltar.setText("Voltar");
        relatorioVoltar.setActionCommand("relatorioVoltar");

        viewRelatorio_Bar.setBackground(getBackground());
        viewRelatorio_Bar.setLayout(new java.awt.BorderLayout());

        viewRelatorio_BarChart.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(viewRelatorio_BarChart, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(viewRelatorio_BarChart)
                .addContainerGap())
        );

        relatorioMesInicialCb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        relatorioCategoriaCb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        relatorioAnoInicialCb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Filtrar Resultados");

        jLabel2.setText("Mês Inicial:");

        jLabel3.setText("Mês Final:");

        jLabel4.setText("Categoria");

        relatorioMesFinalCb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        relatorioAnoFinalCb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        relatorioAplicarFiltro.setText("Aplicar Filtro");
        relatorioAplicarFiltro.setActionCommand("relatorioAplicarFiltro");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(relatorioMesInicialCb, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(relatorioAnoInicialCb, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(relatorioMesFinalCb, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(relatorioAnoFinalCb, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(relatorioCategoriaCb, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(relatorioAplicarFiltro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(9, 9, 9)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(relatorioMesInicialCb, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(relatorioAnoInicialCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(relatorioMesFinalCb, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(relatorioAnoFinalCb, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(relatorioCategoriaCb, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(relatorioAplicarFiltro))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(relatorioVoltar)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(10, 10, 10)
                        .addComponent(viewRelatorio_Bar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(viewRelatorio_Bar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(relatorioVoltar)
                .addContainerGap())
        );

        relatorioMesTab.addTab("tab1", jPanel1);

        relatorioMesCb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        relatorioVoltar2.setText("Voltar");
        relatorioVoltar2.setActionCommand("relatorioVoltar");

        viewRelatorio_PieChart.setLayout(new java.awt.BorderLayout());

        jLabel5.setText("Selecionar Mês: ");

        relatorioSelecionarMes.setText("Selecionar");
        relatorioSelecionarMes.setToolTipText("");
        relatorioSelecionarMes.setActionCommand("relatorioSelecionarMes");

        relatorioAnoCb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setText("Mostrar: ");

        relatorioDespesasChb.setSelected(true);
        relatorioDespesasChb.setText("Despesas");

        relatorioReceitasChb.setSelected(true);
        relatorioReceitasChb.setText("Receitas");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(relatorioDespesasChb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(relatorioReceitasChb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addComponent(viewRelatorio_PieChart, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                        .addGap(0, 0, 0)
                        .addComponent(relatorioSelecionarMes))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(relatorioVoltar2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(relatorioMesCb, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(relatorioAnoCb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(relatorioMesCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(relatorioAnoCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(4, 4, 4)
                        .addComponent(viewRelatorio_PieChart, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(relatorioSelecionarMes)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(relatorioDespesasChb)
                                .addComponent(relatorioReceitasChb)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(relatorioVoltar2)
                .addContainerGap())
        );

        relatorioMesTab.addTab("tab2", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(relatorioMesTab)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(relatorioMesTab)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JComboBox<String> relatorioAnoCb;
    private javax.swing.JComboBox<String> relatorioAnoFinalCb;
    private javax.swing.JComboBox<String> relatorioAnoInicialCb;
    private javax.swing.JButton relatorioAplicarFiltro;
    private javax.swing.JComboBox<String> relatorioCategoriaCb;
    private javax.swing.JCheckBox relatorioDespesasChb;
    private javax.swing.JComboBox<String> relatorioMesCb;
    private javax.swing.JComboBox<String> relatorioMesFinalCb;
    private javax.swing.JComboBox<String> relatorioMesInicialCb;
    private javax.swing.JTabbedPane relatorioMesTab;
    private javax.swing.JCheckBox relatorioReceitasChb;
    private javax.swing.JButton relatorioSelecionarMes;
    private javax.swing.JButton relatorioVoltar;
    private javax.swing.JButton relatorioVoltar2;
    private javax.swing.JPanel viewRelatorio_Bar;
    private javax.swing.JLayeredPane viewRelatorio_BarChart;
    private javax.swing.JPanel viewRelatorio_Pie;
    private javax.swing.JLayeredPane viewRelatorio_PieChart;
    // End of variables declaration//GEN-END:variables

/**
     * Creates a sample dataset 
     */
    
    //Adicionei o int mes para passar o mes dos dados.
                                        
    private  void criaDadosGraficoTorta(DadosMes dm){
        //Exemplo da minha ideia
        
        //Creio que essa funcao vai ser utilizada pelo controlador... Nao sei se este modo vai se encaixar bem na arquitetura...
        
        
        dadosGraficoTorta.clear();
        for (Movimentacao mov : dm.getMovimentacoes()){
            if (mov instanceof Receita && isSelectedReceita) {
                String cr = CategoriaReceita.categoriaToString(((Receita) mov).getCategoria());
                dadosGraficoTorta.setValue(cr, mov.getValor()/100);
            } else {
                if (mov instanceof Despesa && isSelectedDespesa) {
                    String cd = CategoriaDespesa.categoriaToString(((Despesa) mov).getCategoria());
                    dadosGraficoTorta.setValue(cd, mov.getValor()/100);
                }
            }
        }
    }
    
    public void geraPieChart(int mes){
        JFreeChart chart = createChart("Relatorio", dadosGraficoTorta);  
        ChartPanel chartPanel = new ChartPanel(chart);
        chartPanel.setPreferredSize(new java.awt.Dimension( 339, 117) );
        
        viewRelatorio_PieChart.removeAll();
        viewRelatorio_PieChart.add(chartPanel, BorderLayout.CENTER);
        viewRelatorio_PieChart.validate();

    }
    
    public void geraBarChart(){

        JFreeChart barChart = ChartFactory.createBarChart(
            "Relatório Geral",
            "",
            "R$",
            dadosGraficoBarras,
            org.jfree.chart.plot.PlotOrientation.VERTICAL,
            true, true, false);

        ChartPanel chartPanel = new ChartPanel( barChart );
        chartPanel.setPreferredSize(new java.awt.Dimension(339, 117));
        
        viewRelatorio_BarChart.removeAll();
        viewRelatorio_BarChart.add(chartPanel, BorderLayout.CENTER);
        viewRelatorio_BarChart.validate();

    }
    
    public String getMesInicial(){
        return (String) relatorioMesInicialCb.getSelectedItem();
    }
    public String getAnoInicial(){
        return (String) relatorioAnoInicialCb.getSelectedItem();
    }
    public String getMesFinal(){
        return (String) relatorioMesFinalCb.getSelectedItem();
    }
    public String getAnoFinal(){
        return (String) relatorioAnoFinalCb.getSelectedItem();
    }
    public String getCategoria(){
        return (String) relatorioCategoriaCb.getSelectedItem();
    }
    public String getMesPie(){
        return (String) relatorioMesCb.getSelectedItem();
    }
    public String getAnoPie(){
        return (String) relatorioAnoCb.getSelectedItem();
    }
    public boolean isReceita(){
        return relatorioReceitasChb.isSelected();
    }
    public boolean isDespesa(){
        return relatorioDespesasChb.isSelected();
    }

    public void setReceitaEDespesa(boolean isR, boolean isD){
        isSelectedReceita = isR;
        isSelectedDespesa = isD;
    }
    
    
    public void popularMenus() {
        relatorioMesInicialCb.setModel(new DefaultComboBoxModel(Calendario.listaMes));
        relatorioAnoInicialCb.setModel(new DefaultComboBoxModel(Calendario.listaAno));
        relatorioMesFinalCb.setModel(new DefaultComboBoxModel(Calendario.listaMes));
        relatorioAnoFinalCb.setModel(new DefaultComboBoxModel(Calendario.listaAno));
        relatorioMesCb.setModel(new DefaultComboBoxModel(Calendario.listaMes));
        relatorioAnoCb.setModel(new DefaultComboBoxModel(Calendario.listaAno));
        
        ArrayList<String> cats = new ArrayList<>();
        
        for (CategoriaDespesa cd : CategoriaDespesa.values()) {
            cats.add(CategoriaDespesa.categoriaToString(cd));
        }
        
        for (CategoriaReceita cr : CategoriaReceita.values()) {
            cats.add(CategoriaReceita.categoriaToString(cr));
        }
        
        relatorioCategoriaCb.setModel(new DefaultComboBoxModel(cats.toArray()));
        
    }
    
    public void setMeses(GregorianCalendar igc, GregorianCalendar lgc){
        iniciogc = igc;
        fimgc = lgc;
        fimgc.add(GregorianCalendar.MONTH, 1);
    }

    public void criaDadosGraficoBarras(ArrayList<Integer> dados) {
        GregorianCalendar gc;
        int it = 0;
        dadosGraficoBarras.clear();

        // TODO: Laco tem que ir ate um a mais, senao eh pouca coisa impressa
        for (gc = iniciogc; !APISistemaDesktop.comparaMeses(gc, fimgc); gc.add(GregorianCalendar.MONTH, 1)) {
            System.out.println(it);
            if (dados.get(it) != 0) {
                dadosGraficoBarras.addValue(dados.get(it)/100,
                        String.valueOf(gc.get(GregorianCalendar.MONTH)) + "/"
                                + String.valueOf(gc.get(GregorianCalendar.YEAR)),
                        this.getCategoria());
            }
            it++;
        }         
   }
    
/**
     * Creates a chart
     */
//Essa funcao pode ser usada para personlizar mais ou atualizar o chart.
    //OBS: nao esta sendo usada no chart criado na funcao geraChart
    
    private JFreeChart createChart(String title, PieDataset dataset ) {
        
        JFreeChart chart = ChartFactory.createPieChart3D(title,          // chart title
            dataset,                // data
            true,                   // include legend
            true,
            false);

        PiePlot3D plot = (PiePlot3D) chart.getPlot();
        plot.setStartAngle(290);
        plot.setDirection(Rotation.CLOCKWISE);
        plot.setForegroundAlpha(0.5f);
        return chart;
        
    }


}
